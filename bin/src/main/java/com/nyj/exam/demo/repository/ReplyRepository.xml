<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nyj.exam.demo.repository.ReplyRepository">

	<select id="getForPrintReplies" resultType="Reply">
		SELECT a.*, m.nickname AS extra__writerName
		FROM `reply` AS a
		LEFT JOIN `member` AS m
		ON a.memberId = m.id
		WHERE  a.relTypeCode = #{relTypeCode} 
		AND a.relId = #{id};
	</select>
	
	<select id="getForPrintReply" resultType="Reply">
		SELECT *
		FROM `reply`
		WHERE id = #{id} 
		AND relTypeCode = "article" ;
	</select>
	
	<delete id="doDelete">
		DELETE FROM `reply`
		WHERE id = #{id}
	</delete>
	
	<update id="doModify">
		UPDATE `reply`
		SET updateDate = NOW(),
		`body` = #{body}
		WHERE id = #{id}
	</update>
	
	<update id="increaseGoodReactionPoint">
		UPDATE `reply`
		SET goodReactionPoint = goodReactionPoint+1 
		WHERE id = #{id};
	</update>
	
	<update id="increaseBadReactionPoint">
		UPDATE `reply`
		SET badReactionPoint = badReactionPoint+1 
		WHERE id = #{id};
	</update>
	
	<update id="decreaseReactionPoint">
		UPDATE `reply`
		<set>
			<if test="cancelReaction == 'goodReactionPoint'">
			goodReactionPoint = goodReactionPoint - 1
			</if>
			<if test="cancelReaction == 'badReactionPoint'">
			badReactionPoint = badReactionPoint - 1
			</if>
		</set>
		WHERE id = #{relId};
	</update> 
	
	<delete id="deleteReplyFromMember">
		DELETE FROM `reply`
		WHERE memberId = #{memberId};	
	</delete>
	
	<insert id="doMemberWriteReply" >
		INSERT INTO `reply`
		SET regDate = NOW(),
		updateDate = NOW(),
		memberId = #{memberId},
		pw = #{pw},
		salt = #{salt},
		relTypeCode = #{relTypeCode},
		relId = #{relId},
		`body` = #{body}
	</insert>
	
	<insert id="doNonMemberWriteReply" >
		INSERT INTO `reply`
		SET regDate = NOW(),
		updateDate = NOW(),
		`writer` = #{writer},
		`pw` = #{pw},
		salt = #{salt},
		relTypeCode = #{relTypeCode},
		relId = #{relId},
		`body` = #{body}
	</insert>
	
	<select id="getNewReplies" resultType="Reply"> 	
		SELECT 
		r.*,
		IFNULL(m.nickname, r.writer) AS extra__writerName
		FROM `reply` r
		LEFT JOIN `member` m
		ON r.memberId = m.id
		ORDER BY r.id DESC
		LIMIT 0, 4;
	</select>
	
	<select id="getReplyByMemberId" resultType="Reply">
	SELECT * 
	FROM reply
	WHERE memberId = #{memberId}
	AND relTypeCode = "article"
	ORDER BY id DESC
	<if test="limitTake != 0">
		LIMIT #{limitStart}, #{limitTake};
	</if>
	<if test="limitTake == 0">
		LIMIT 0, 5;
	</if>
	</select>
</mapper>